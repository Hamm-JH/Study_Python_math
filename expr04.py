
# .1 벡터와 화살표 p123
# 벡터란 방향과 크기로 결정되는 양을 말한다.

# .2 벡터의 성분 p124
# 화살표는 어디에나 그릴 수 있으나 화살표만으로 모든 것을 설명할 수는 없다.
# 벡터의 성분 구하기
# 벡터의 시작점 A의 좌표(x1, y1)와 끝점 B의 좌표(x2, y2)를 사용해 다음과 같은 방식으로 구할 수 있습니다.
# 벡터 AB = (x2 - x1, y2 - y1)
# 예
# 점 A = (4, 2)
# 점 B = (6, 5)
# 벡터 AB = (6-4, 5-2) = (2, 3)

# .3 벡터의 방향 126
import math

# 126 벡터의 방향 구하기
def ex127(x, y):
    rad = math.atan2(y, x)  # 각도를 구한다
    th = math.degrees(rad)  # 도수법으로 변환한다
    print(th)

# .4 벡터의 크기 128
# 129 단위 벡터
# 단위 벡터 : 벡터AB와 방향이 같고, 크기가 1인 벡터
# 벡터의 크기 : 스칼라. 벡터가 아닌 숫자 값

# .5 벡터의 연산 129
# 덧셈
# 벡터 a + b = c
# a의 끝점에 b의 시작점을 가져다 붙인다.
# a의 시작점에서 시작해서 b의 끝점을 가리키는 벡터가 c
# a + b = b + a가 됨. 교환법칙 성립함
# 두 벡터 시작점이 동일한 위치에 있으면 두 벡터의 평행사변형의 대각선 = a + b가 됨

# 뺄셈
# 벡터 b의 부호를 반전시켜서 -b로 만들면 크기가 같고 방향은 반대인 벡터가 됨
# a - b = c는 a + (-b) = c와 같이 덧셈으로 바꿔쓸 수 있음.

# 실수배
# a = (a1, b1)
# b = ka = (ka1, kb1)

# 크기도 방향도 가지지 않는 영벡터
# 벡터 0으로 표기함.

import numpy as np

# 133 파이썬에서 벡터 연산 실행하기
def ex133():
    a = np.array([2, 2])    # a의 성분
    b = np.array([2, -1])   # b의 성분
    print(a + b)
    print(a - b)
    print(2 * a)

# .6 벡터 분해 134
# 두 벡터가 이루는 평행사변형의 대각선이 a + b가 된다고 함
# 이 말은 반대로 벡터는 두 벡터로 분해할 수 있다고 해석가능